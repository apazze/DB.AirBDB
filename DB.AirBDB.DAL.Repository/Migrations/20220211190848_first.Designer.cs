// <auto-generated />
using System;
using DB.AirBDB.DAL.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DBCaio.AirBDB.DAL.Repository.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20220211190848_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DBCaio.AirBDB.DAL.Repository.DatabaseEntity.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("PlaceId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            BookingId = 1,
                            DataFim = new DateTime(2022, 3, 10, 20, 30, 0, 0, DateTimeKind.Unspecified),
                            DataInicio = new DateTime(2022, 3, 2, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            PlaceId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("DBCaio.AirBDB.DAL.Repository.DatabaseEntity.Place", b =>
                {
                    b.Property<int>("PlaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccomodationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusLocacao")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("PlaceId");

                    b.ToTable("Places");

                    b.HasData(
                        new
                        {
                            PlaceId = 1,
                            AccomodationType = "Casa",
                            Ativo = true,
                            City = "Tramandaí",
                            Description = "Casa a 3 quadras do mar",
                            StatusLocacao = 0,
                            Value = 250.0
                        },
                        new
                        {
                            PlaceId = 2,
                            AccomodationType = "Apartamento",
                            Ativo = true,
                            City = "Porto Alegre",
                            Description = "Apartamento no bairro Cidade Baixa",
                            StatusLocacao = 0,
                            Value = 500.0
                        });
                });

            modelBuilder.Entity("DBCaio.AirBDB.DAL.Repository.DatabaseEntity.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Name = "Caio César Martins",
                            Password = "P4$$W0RDseguro",
                            UserName = "caio_martins"
                        },
                        new
                        {
                            UserId = 2,
                            Name = "Alisson dos Santos Pazze",
                            Password = "P4$$W0RDmaisS3GUR0",
                            UserName = "alisson_pazze"
                        });
                });

            modelBuilder.Entity("DBCaio.AirBDB.DAL.Repository.DatabaseEntity.Booking", b =>
                {
                    b.HasOne("DBCaio.AirBDB.DAL.Repository.DatabaseEntity.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBCaio.AirBDB.DAL.Repository.DatabaseEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
